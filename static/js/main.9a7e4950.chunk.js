(this["webpackJsonpgenetic-visualizer"]=this["webpackJsonpgenetic-visualizer"]||[]).push([[0],{32:function(e,t,n){e.exports=n(44)},37:function(e,t,n){},42:function(e,t,n){},43:function(e,t,n){},44:function(e,t,n){"use strict";n.r(t);var a,o,r=n(0),i=n.n(r),s=n(16),l=n.n(s),c=(n(37),n(38),n(7)),u=n(8),h=n(10),m=n(9),g=n(5),p=n(14),d=n(25);function f(){return{endColor:[0,0,0],populationSize:a.Medium,mutationType:o.Gradual,mutationChance:.3,decreaseMutation:!1,matingPoolPercent:.25}}!function(e){e[e.Small=0]="Small",e[e.Medium=1]="Medium",e[e.Large=2]="Large"}(a||(a={})),function(e){e[e.Gradual=0]="Gradual",e[e.Invert=1]="Invert"}(o||(o={}));var v=function(e){Object(h.a)(n,e);var t=Object(m.a)(n);function n(){var e;Object(c.a)(this,n);for(var r=arguments.length,i=new Array(r),s=0;s<r;s++)i[s]=arguments[s];return(e=t.call.apply(t,[this].concat(i))).state=f(),e.handleVisualize=function(t){e.props.switchToVisualize(e.state)},e.handleMutationTypeChange=function(t){var n=o.Gradual;switch(t.currentTarget.value){case"Gradual":n=o.Gradual;break;case"Invert":n=o.Invert}e.setState({mutationType:n})},e.handlePopulationSizeChange=function(t){var n=a.Medium;switch(t.currentTarget.value){case"Small":n=a.Small;break;case"Medium":n=a.Medium;break;case"Large":n=a.Large}e.setState({populationSize:n})},e.handleColorChange=function(t){e.setState({endColor:e.hexToRgb(t.currentTarget.value)})},e.handleCheckBoxChange=function(t){e.setState({decreaseMutation:t.currentTarget.checked})},e.handleMutationChanceChange=function(t){e.setState({mutationChance:+t.currentTarget.value})},e.handleMatingPoolPercentChange=function(t){e.setState({matingPoolPercent:+t.currentTarget.value})},e}return Object(u.a)(n,[{key:"hexToRgb",value:function(e){var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]}},{key:"render",value:function(){return i.a.createElement("div",{className:"container"},i.a.createElement(d.a,null,i.a.createElement(d.a.Header,{as:"h5"},"Genetic Visualizer"),i.a.createElement(d.a.Body,null,i.a.createElement("p",null," ",'Welcome to Genetic Visualizer! This app aims to be an educational resource for genetic algorithms by showing one in action for optimizing colors. Genetic algorithms are heavily inspired by Darwins\'s Theory of Evolution and the Natural Selection. It works by selecting "fittest" individuals of the population to pass their genes on and randomly mutates the genes of the offspring. In this example we have chosen the color of the node to be its core gene and are optimizing based on how close it is to a target color that we choose. Genetic algorithms work with the following four steps:'),i.a.createElement("ol",null,i.a.createElement("li",null,i.a.createElement("span",{style:{fontWeight:"bold"}}," ","Initial Population:"," ")," ","The algorithm functions by acting on a population of entities containing genes. In this example the population is made up of white nodes in a grid where each node has a color vector representing a gene."),i.a.createElement("li",null,i.a.createElement("span",{style:{fontWeight:"bold"}}," ","Choosing mating pool:"," ")," ","First the group of entities that will be used for the next generation is chosen based on fitness. What fitness is depends on the application. In this case, the fitness of each node is determined to how similar its color is to the target color we are optimizing for."),i.a.createElement("li",null,i.a.createElement("span",{style:{fontWeight:"bold"}}," Crossover: ")," Once the mating pool has been chosen, the crossover step is performed. Crossover is when new offspring are created by mixing the genes of two parents in the mating pool. The number of crossovers is typically constant to ensure that the overall size of the population remains the same for each generation."),i.a.createElement("li",null,i.a.createElement("span",{style:{fontWeight:"bold"}}," Mutation: "),' When an offspring is created there is a random chance to modify its genes in some way. This is how the population "evolves". The favourability of a mutation is determined by the fitness.')),i.a.createElement(g.a,null,i.a.createElement(g.a.Group,{controlId:"formEndColor"},i.a.createElement(g.a.Label,{style:{fontWeight:"bold"}},"The color to converge to:"),i.a.createElement("p",{style:{color:"grey"}},"This is the color we base a node's fitness off of. The mating pool will be made up of the nodes which are closest to this color."),i.a.createElement(g.a.Control,{type:"color",onChange:this.handleColorChange})),i.a.createElement(g.a.Group,{controlId:"formPopulationSize"},i.a.createElement(g.a.Label,{style:{fontWeight:"bold"}},"Population Size:"),i.a.createElement("p",{style:{color:"grey"}},"This determines how many nodes are in the population."),i.a.createElement(g.a.Control,{as:"select",defaultValue:"Medium",onChange:this.handlePopulationSizeChange},i.a.createElement("option",null,"Small"),i.a.createElement("option",null,"Medium"),i.a.createElement("option",null,"Large"))),i.a.createElement(g.a.Group,{controlId:"formMutationType"},i.a.createElement(g.a.Label,{style:{fontWeight:"bold"}},"Mutation Type:"),i.a.createElement("p",{style:{color:"grey"}},"Gradual: Adds a value between -50 and 50 to a color channel."),i.a.createElement("p",{style:{color:"grey"}},"Invert: Inverts a given color channel (ie. 255 - channel)."),i.a.createElement(g.a.Control,{as:"select",defaultValue:"Gradual",onChange:this.handleMutationTypeChange},i.a.createElement("option",null,"Gradual"),i.a.createElement("option",null,"Invert"))),i.a.createElement(g.a.Group,{controlId:"formCheck"},i.a.createElement(g.a.Check,{type:"checkbox",label:"Decrease mutation chance over generations",onChange:this.handleCheckBoxChange,checked:this.state.decreaseMutation})),i.a.createElement(g.a.Group,{controlId:"formMutationRange"},i.a.createElement(g.a.Label,null,i.a.createElement("span",{style:{fontWeight:"bold"}},"Mutation Chance:")," ",this.state.mutationChance),i.a.createElement("p",{style:{color:"grey"}},"The chance for the color channel of an offpspring to mutate."),i.a.createElement(g.a.Control,{type:"range",min:"0",max:"1",step:"0.05",value:this.state.mutationChance,onChange:this.handleMutationChanceChange})),i.a.createElement(g.a.Group,{controlId:"formMatingPoolRange"},i.a.createElement(g.a.Label,null,i.a.createElement("span",{style:{fontWeight:"bold"}},"Percentage of population in mating pool:")," ",this.state.matingPoolPercent),i.a.createElement("p",{style:{color:"grey"}},"How many nodes are used to generate the next population. For example, if the value is 0.5, then the 50% most fit nodes will be selected to populate the next generation."," "),i.a.createElement(g.a.Control,{type:"range",min:"0.01",max:"1",step:"0.01",value:this.state.matingPoolPercent,onChange:this.handleMatingPoolPercentChange})),i.a.createElement(p.a,{variant:"primary",onClick:this.handleVisualize},"Visualize")))))}}]),n}(i.a.Component),y=n(15),b=n(31),E=function(e){Object(h.a)(n,e);var t=Object(m.a)(n);function n(){return Object(c.a)(this,n),t.apply(this,arguments)}return Object(u.a)(n,[{key:"render",value:function(){var e=this;return i.a.createElement(y.a,{bg:"light",expand:"lg"},i.a.createElement(y.a.Brand,null,"Genetic Visualizer"),i.a.createElement(y.a.Toggle,{"aria-controls":"basic-navbar-nav"}),i.a.createElement(y.a.Collapse,{id:"basic-navbar-nav"},i.a.createElement(b.a,{className:"mr-auto"},i.a.createElement(y.a.Text,{className:"mr-sm-2"},"Generation Number: ",this.props.generationNumber),i.a.createElement(y.a.Text,{className:"mr-sm-2"},"Mutation Chance: ",this.props.mutationChance)),i.a.createElement(g.a,{inline:!0},i.a.createElement(p.a,{className:"mr-sm-2",onClick:function(t){return e.props.sortByFitness()}},"Sort by fitness"),i.a.createElement(p.a,{className:"mr-sm-2",onClick:function(t){return e.props.nextGeneration()}},"Next Generation"),i.a.createElement(p.a,{className:"mr-sm-2",onClick:function(t){return e.props.nextGeneration(10)}},"Next Generation (x10)"),i.a.createElement(p.a,{className:"mr-sm-2",variant:"dark",onClick:function(t){return e.props.switchToSettings()}},"Reset"))))}}]),n}(i.a.Component),C=function(){function e(){Object(c.a)(this,e),this.colorVector=void 0,this.colorVector=[255,255,255]}return Object(u.a)(e,[{key:"getDistanceFromTarget",value:function(e){for(var t=[0,0,0],n=0;n<3;n++)t[n]=e[n]-this.colorVector[n];return Math.sqrt(t.reduce((function(e,t){return e+Math.pow(t,2)}),0))}},{key:"mutateGradual",value:function(e,t){var n=this;return this.mutate(e,t,(function(e){return e+n.getRandomInt(-50,50)}))}},{key:"mutateInvert",value:function(e,t){return this.mutate(e,t,(function(e){return 255-e}))}},{key:"mutate",value:function(e,t,n){t=this.getMutationChance(t,e);for(var a=0;a<3;a++){Math.random()<=t&&(this.colorVector[a]=n(this.colorVector[a]),this.colorVector[a]>255?this.colorVector[a]=255:this.colorVector[a]<0&&(this.colorVector[a]=0))}return t}},{key:"getRandomInt",value:function(e,t){return e=Math.ceil(e),t=Math.floor(t),Math.floor(Math.random()*(t-e+1))+e}},{key:"getMutationChance",value:function(e,t){return-1!==t?e/t:e}}],[{key:"crossover",value:function(t,n){for(var a=new e,o=0;o<3;o++){var r=Math.random();a.colorVector[o]=t.colorVector[o]*r+n.colorVector[o]*(1-r)}return a}},{key:"getMatingPool",value:function(e,t,n){return this.sortByFitness(e,t),e.slice(0,Math.round(e.length*n))}},{key:"sortByFitness",value:function(e,t){e.sort((function(e,n){return e.getDistanceFromTarget(t)<n.getDistanceFromTarget(t)?-1:1}))}}]),e}(),w=(n(42),function(e){Object(h.a)(n,e);var t=Object(m.a)(n);function n(){return Object(c.a)(this,n),t.apply(this,arguments)}return Object(u.a)(n,[{key:"render",value:function(){var e=this.props.geneticNode.colorVector,t="50px",n="50px";switch(this.props.populationSize){case a.Small:t="100px",n="100px";break;case a.Medium:t="50px",n="50px";break;case a.Large:t="15px",n="15px"}return i.a.createElement("div",{className:"node",style:{backgroundColor:"rgb(".concat(e[0],", ").concat(e[1],",").concat(e[2],")"),height:t,width:n}})}}]),n}(i.a.Component)),k=n(29),M=n(30),S=n(20),T=function(e){Object(h.a)(n,e);var t=Object(m.a)(n);function n(){var e;Object(c.a)(this,n);for(var a=arguments.length,o=new Array(a),r=0;r<a;r++)o[r]=arguments[r];return(e=t.call.apply(t,[this].concat(o))).state={grid:[],generationNumber:1,mutationChance:e.props.settings.mutationChance},e.nextGeneration=function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,n=e.state.grid,a=e.getFlattenedNodes(n),o=e.state.generationNumber,r=0;r<t;r++){var i=C.getMatingPool(a,e.props.settings.endColor,e.props.settings.matingPoolPercent),s=a.length-i.length;a=e.getNextPopulation(i,s,o),o++}n=e.unFlattenNodes(a),e.setState({grid:n,generationNumber:e.state.generationNumber+t})},e.sortByFitness=function(){var t=e.props.settings.endColor,n=e.getFlattenedNodes(e.state.grid);C.sortByFitness(n,t),e.setState({grid:e.unFlattenNodes(n)})},e.getInitialGrid=function(){for(var t=e.getGridSize(),n=[],a=0;a<t;a++){for(var o=[],r=0;r<t;r++)o.push(new C);n.push(o)}return n},e}return Object(u.a)(n,[{key:"componentDidMount",value:function(){this.setState({grid:this.getInitialGrid()})}},{key:"getNextPopulation",value:function(e,t,n){for(var a=Array.from(e),o=0;o<t;o++){var r=this.getParents(e),i=C.crossover(r[0],r[1]),s=this.mutateOffspring(i,n);this.setState({mutationChance:s}),a.push(i)}return a}},{key:"mutateOffspring",value:function(e,t){switch(this.props.settings.mutationType){case o.Gradual:return e.mutateGradual(this.props.settings.decreaseMutation?t:-1,this.props.settings.mutationChance);case o.Invert:return e.mutateInvert(this.props.settings.decreaseMutation?t:-1,this.props.settings.mutationChance)}}},{key:"getParents",value:function(e){for(var t=Math.floor(Math.random()*e.length),n=Math.floor(Math.random()*e.length);n===t;)n=Math.floor(Math.random()*e.length);return[e[t],e[n]]}},{key:"getFlattenedNodes",value:function(e){for(var t=[],n=0;n<e.length;n++)for(var a=0;a<e[n].length;a++)t.push(e[n][a]);return t}},{key:"unFlattenNodes",value:function(e){for(var t=this.state.grid.length,n=0,a=[],o=0;o<t;o++){for(var r=[],i=0;i<t;i++)r.push(e[n]),n++;a.push(r)}return a}},{key:"getGridSize",value:function(){switch(this.props.settings.populationSize){case a.Small:return 10;case a.Medium:return 20;case a.Large:return 36}}},{key:"render",value:function(){var e=this;return i.a.createElement("div",null,i.a.createElement(E,{generationNumber:this.state.generationNumber,mutationChance:this.state.mutationChance,nextGeneration:this.nextGeneration,sortByFitness:this.sortByFitness,switchToSettings:this.props.switchToSettings}),i.a.createElement(k.a,{fluid:"sm"},this.state.grid.map((function(t,n){return i.a.createElement(M.a,{key:n},t.map((function(t,a){return i.a.createElement(S.a,null,i.a.createElement(w,{key:"".concat(n,"-").concat(a),geneticNode:t,populationSize:e.props.settings.populationSize}))})))}))))}}]),n}(i.a.Component),x=(n(43),function(e){Object(h.a)(n,e);var t=Object(m.a)(n);function n(){var e;Object(c.a)(this,n);for(var a=arguments.length,o=new Array(a),r=0;r<a;r++)o[r]=arguments[r];return(e=t.call.apply(t,[this].concat(o))).state={isSettings:!0,settings:f()},e.switchToVisualize=function(t){e.setState({isSettings:!1,settings:t})},e.switchToSettings=function(){e.setState({isSettings:!0})},e}return Object(u.a)(n,[{key:"render",value:function(){return this.state.isSettings?i.a.createElement(v,{switchToVisualize:this.switchToVisualize}):i.a.createElement(T,{settings:this.state.settings,switchToSettings:this.switchToSettings})}}]),n}(i.a.Component));Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(i.a.createElement(i.a.StrictMode,null,i.a.createElement(x,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}},[[32,1,2]]]);
//# sourceMappingURL=main.9a7e4950.chunk.js.map